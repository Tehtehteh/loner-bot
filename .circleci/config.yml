version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/loner

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "src/Pipfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pipenv
            pipenv install --deploy --ignore-pipfile --dev
          environment:
            - PIPENV_PIPFILE: src/Pipfile
            - PIPENV_VENV_IN_PROJECT: 1

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "src/Pipfile.lock" }}
  test:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/loner
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "src/Pipfile.lock" }}
            - v1-dependencies-
      - run:
          name: pylint
          command: |
            ls -al
            mkdir test-reports
            .venv/bin/flake8 --format=codeclimate --output-file=test-reports/${REPORT_FILE} --tee src
          environment:
            - REPORT_FILE: flake8_report.json
      - store_artifacts:
            path: test-reports
            destination: test-reports
workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test:
          requires:
            - build
#      - run:
#          name: run tests
#          command: |
#            . venv/bin/activate
#            python manage.py test
#
#      - store_artifacts:
#          path: test-reports
#          destination: test-reports
#  push_to_registry:
#    steps:
#      - checkout
#      - run:
#          name: push to docker hub
#          command: |
#            docker login --username=ceilingcat --password=${DOCKERHUB_CIRCLECI_TOKEN}
#            docker push ceilingcat/loner-bot:{{ branch }}